set(path ${CMAKE_CURRENT_LIST_DIR})
cmake_path(GET path FILENAME this_directory)

if(NOT EXISTS "${CMAKE_CURRENT_LIST_DIR}/@dir_name@_test.cpp")
    message("Creating standard test file for this days solution.")
    configure_file(
        "${CMAKE_SOURCE_DIR}/configured_files/day_test.cpp.in" 
        "${CMAKE_CURRENT_LIST_DIR}/@dir_name@_test.cpp"
        @ONLY)
endif()

add_executable(@parent_directory@_@dir_name@_test @dir_name@_test.cpp
    ${CMAKE_SOURCE_DIR}/src/campaigns/@parent_directory@/@dir_name@/@parent_directory@_@dir_name@.cpp)

target_link_libraries(
  @parent_directory@_@dir_name@_test
  PRIVATE AofCode_Cpp::AofCode_Cpp_warnings
          AofCode_Cpp::AofCode_Cpp_options
          AofCode_Cpp::aoc_library
          Catch2::Catch2WithMain)

if(WIN32 AND BUILD_SHARED_LIBS)
  add_custom_command(
    TARGET tests
    PRE_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_RUNTIME_DLLS:tests> $<TARGET_FILE_DIR:tests>
    COMMAND_EXPAND_LISTS)
endif()

target_include_directories(
    @parent_directory@_@dir_name@_test 
    PRIVATE ${CMAKE_SOURCE_DIR}/src/campaigns/@parent_directory@/@dir_name@)

# automatically discover tests that are defined in catch based test files you can modify the unittests. Set TEST_PREFIX
# to whatever you want, or use different for different binaries
catch_discover_tests(
  @parent_directory@_@dir_name@_test 
  TEST_PREFIX
  "campaign @parent_directory@ @dir_name@ tests: "
  REPORTER
  XML
  OUTPUT_DIR
  .
  OUTPUT_PREFIX
  "campaign @parent_directory@ @dir_name@ tests: "
  OUTPUT_SUFFIX
  .xml)